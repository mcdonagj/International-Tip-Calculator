version: '3.7'
services:

  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
      LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - net
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    depends_on:
      - agent
    ports:
      - "9000:9000"
    volumes:
      - portainer_data:/data
    networks:
      - net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # db:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - net
  #   deploy:
  #     placement: 
  #       constraints: [node.role == worker]
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - net
    deploy:
      placement: 
        constraints: [node.role == manager]

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
    image: tiptabs_backend:latest
    ports:
     - "5000:5000"
    networks:
      - net
    deploy:
      # placement: 
      #   constraints: [node.role == worker]
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  # frontend:
  #   image: tiptabs_frontend
  #   depends_on:
  #    - backend
  #    - db
  #   ports:
  #    - 80:80
  #   networks:
  #     - net
  #   deploy:
  #     placement: 
  #       constraints: [node.role == worker]
  #     replicas: 2
  #     update_config:
  #       parallelism: 2
  #       delay: 10s
  #     restart_policy:
  #       condition: on-failure

networks:
  net:
    driver: overlay
    attachable: true

volumes:
  portainer_data: